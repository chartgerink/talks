document <- fromJSON(txt=url)
class(document)
document$documentacion
document$documentacion[1]
head(document$documentacion)
head(document$documentacion, 1)
class(document$documentacion)
class(document$documentacion$documentacion_item)
(document$documentacion$documentacion_item)[1]
300-6.18-7.5-1.93-6.46-13.7-26.81-4.99-60
duplicated(readClipboard())
x = readClipboard()
unique(x)
writeClipboard(unique(x))
.5/6
sqrt(.5/6)
if(!require(devtools)){install.packages('devtools')}
if(!require(googlesheets)){install_github('jennybc/googlesheets')}
library(googlesheets)
gs_ls()
install.packages('curl')
install.packages("curl")
gs_ls()
library(googlesheets)
gs_ls()
?gs_url()
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing")
?gs_copy
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read()
library(magrittr)
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read()
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(range = cell_columns(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(col_names = TRUE)
?gs_read
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(range = cell_cols(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv(range = cell_cols(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
gs_ls("icanhazpdf")
gs_ls("icanhazpdf") %>% gs_read()
gs_read("icanhazpdf")
gs_read(ss = "icanhazpdf")
gs_title("icanhazpdf") %>% gs_read()
gs_ls()
gs_ls("#icanhaz")
gs_ls("#icanhaz") %>% gs_title()
gs_ls("#icanhazpdf") %>% gs_title("#icanhazpdf")
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
dat <- gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
dim(dat)
names(dat)
grep("ifttt.com/missing_link", dat$firsturl)
missing.firsturl <- [grep("ifttt.com/missing_link", dat$firsturl)]
missing.firsturl <- grep("ifttt.com/missing_link", dat$firsturl)]
dat$firsturl[missing.firsturl] <- NA
missing.firsturl <- grep("ifttt.com/missing_link", dat$firsturl)
dat$firsturl[missing.firsturl] <- NA
dat$firsturl
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
hist(pval.sig)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
hist(pval.sig)
df
?Hmisc
??Hmisc
citation('Hmisc')
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
df
fisher
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
fisher
df
fisher <- -2*sum(log(pval))
fisher
pchisq(fisher, df = df)
library(xlsx)
citation('xlsx')
citation('httr')
runif(0, 3)
runif(0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 3)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
runif(1, 0, 2)
8.99 + # Netflix
23.88 + # Gemeentebelasting
19 + # KPN
29.95 + #Kapper
19.50 + #krant
108.45 + #CZ 1e
0
.45*.55
/36
.45*.55 %>% /36
.45*.55 %>% a/36
library(magrittr)
.45*.55 %>% a/36
.45*.55 %>% /36
x = .45*.55 %>% x/36
sqrt((.45*.55)/36)
make_url
library(curl)
library(utils)
library(httr)
library(methods)
library(jsonlite)
x$base
base
link = "https://staging2.osf.io:443/api/v2/"
link$base
?get
library(RCurl)
getURL(link)
jsonlite::fromJSON(getURL(link))
x <- jsonlite::fromJSON(getURL(link))
y = jsonlite::toJSON(x)
y
# Install (opt) and load the dependent packages
if(!require(httr)){install.packages('httr')}
library(httr)
if(!require(foreign)){install.packages('foreign')}
library(foreign)
if(!require(scales)){install.packages('scales')}
library(scales)
# Download and source custom functions
# Downloads to working directory
# Functions to compute effect sizes
GET('https://raw.githubusercontent.com/chartgerink/2014bump/master/functions/esComp.R',
write_disk('esComp.R', overwrite = TRUE))
source('esComp.R')
# Functions used in the simulation study
GET('https://raw.githubusercontent.com/chartgerink/2014bump/master/functions/simulation_study.R',
write_disk('simulation_study.R', overwrite = TRUE))
source('simulation_study.R')
# Download the data
GET('https://raw.githubusercontent.com/chartgerink/2014bump/master/data/bumpdata.csv',
write_disk('bumpdata.csv', overwrite = TRUE))
# Read in the data
dat <- read.csv2('bumpdata.csv', sep = ';', dec = ',', header = TRUE)
substr(readClipboard(), 25, 30)
substr(readClipboard(), 30, 35)
substr(readClipboard(), 30, 36)
substr(readClipboard(), 30, 37)
substr(readClipboard(), 30, 39)
substr(readClipboard(), 30, 37)
substr(readClipboard(), 32, 37)
writeClipboard(substr(readClipboard(), 32, 37))
substr(readClipboard(), 32,37)
writeClipboard(substr(readClipboard(), 32,37))
writeClipboard(substr(readClipboard(), 32,37))
pchisq(5, df = 0)
-.031+.04
x = "sage_test.csv"
x = c(x, "springer_1203.csv")
grepl("sage", x)
years <- 1994:2003
fab <- c(2,5,3,4,4,3,1,2,4,1)
fals <- c(3,9,6,5,3,8,4,4,5,6)
all <- fab + fals
plot(x = years, y = fab)
plot(x = years, y = fab, type = 'l')
plot(x = years, y = fals, type = 'l')
plot(x = years, y = all, type = 'l')
37+50
87/2
18+37+29+57
141/4
(33+37+29+57) / 4
10^-2
10^-5
10^-5
pchisq(798.74, 455)
library(pwr)
pwr.r.test(33,.1,.10)
pwr.r.test(33,.1,.10, alternative = "greater")
pwr.r.test(33,.1,.10, alternative = "less")
pwr.r.test(33,.1,.10, alternative = "one.sided")
?pwr.r.tes
?pwr.r.test
pwr.r.test(33,.1,.20)
pwr.r.test(33,.1,.05)
readClipboard()
unique(readClipboard())
unique(readClipboard()[!readClipboard() == ""])
unique(readClipboard()[!readClipboard() == ""])
writeClipboard(unique(readClipboard()[!readClipboard() == ""]))
setwd("~/Dropbox/projects/talks/2015_2016/20151020 The impact of daily practices")
dat <- read.table('jcr_recs.txt', header = TRUE, dec = '.', sep = ';')
dat <- read.table('jcr_recs.txt', header = TRUE, dec = '.', sep = ';')
dat$Impact.Factor
sd(dat$Impact.Factor)
sd(dat$Impact.Factor, na.rm = TRUE)
var(dat$Impact.Factor, na.rm = TRUE)
plot(density((dat$Impact.Factor, na.rm = TRUE)))
plot(density((dat$Impact.Factor, na.rm = TRUE))
plot(density(dat$Impact.Factor, na.rm = TRUE))
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
dat <- read.table('jcr_recs.txt', header = TRUE, dec = '.', sep = ';')
ggplot(dat, aes(x = Impact.Factor)) + geom_density()
dat$X5.Year.Impact.Factor
ggplot(dat, aes(x = X5.Year.Impact.Factor)) + geom_density()
ggplot(dat, aes(x = Impact.Factor)) + geom_density()
dat2014 <- read.table('jcr_recs_2014.txt', header = TRUE, dec = '.', sep = ';')
dat2013 <- read.table('jcr_recs_2013.txt', header = TRUE, dec = '.', sep = ';')
dat2012 <- read.table('jcr_recs_2012.txt', header = TRUE, dec = '.', sep = ';')
dat2011 <- read.table('jcr_recs_2011.txt', header = TRUE, dec = '.', sep = ';')
dat2010 <- read.table('jcr_recs_2010.txt', header = TRUE, dec = '.', sep = ';')
ggplot(dat, aes(x = Impact.Factor)) + geom_density()
ggplot(dat2014, aes(x = Impact.Factor)) + geom_density()
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
dat2014 <- read.table('jcr_recs_2014.txt', header = TRUE, dec = '.', sep = ';')
dat2013 <- read.table('jcr_recs_2013.txt', header = TRUE, dec = '.', sep = ';')
dat2012 <- read.table('jcr_recs_2012.txt', header = TRUE, dec = '.', sep = ';')
dat2011 <- read.table('jcr_recs_2011.txt', header = TRUE, dec = '.', sep = ';')
dat2010 <- read.table('jcr_recs_2010.txt', header = TRUE, dec = '.', sep = ';')
dat <- data.frame(Impact.Factor = c(dat2014$Impact.Factor,
dat2013$Impact.Factor,
dat2012$Impact.Factor,
dat2011$Impact.Factor,
dat2010$Impact.Factor),
Year = c(rep(2014, dim(dat2014)[1]),
rep(2013, dim(dat2013)[1]),
rep(2012, dim(dat2012)[1]),
rep(2011, dim(dat2011)[1]),
rep(2010, dim(dat2010)[1])))
ggplot(dat, aes(x = Impact.Factor, by = Year)) + geom_density()
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year))
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year, col = Year))
dat <- data.frame(Impact.Factor = c(dat2014$Impact.Factor,
dat2013$Impact.Factor,
dat2012$Impact.Factor,
dat2011$Impact.Factor,
dat2010$Impact.Factor),
Year = as.factor(c(rep(2014, dim(dat2014)[1]),
rep(2013, dim(dat2013)[1]),
rep(2012, dim(dat2012)[1]),
rep(2011, dim(dat2011)[1]),
rep(2010, dim(dat2010)[1]))))
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year, col = Year))
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
dat2014 <- read.table('jcr_recs_2014.txt', header = TRUE, dec = '.', sep = ';')
dat2013 <- read.table('jcr_recs_2013.txt', header = TRUE, dec = '.', sep = ';')
dat2012 <- read.table('jcr_recs_2012.txt', header = TRUE, dec = '.', sep = ';')
dat2011 <- read.table('jcr_recs_2011.txt', header = TRUE, dec = '.', sep = ';')
dat2010 <- read.table('jcr_recs_2010.txt', header = TRUE, dec = '.', sep = ';')
dat <- data.frame(Impact.Factor = c(dat2014$Impact.Factor,
# dat2012$Impact.Factor,
# dat2012$Impact.Factor,
# dat2011$Impact.Factor,
dat2010$Impact.Factor),
Year = as.factor(c(rep(2014, dim(dat2014)[1]),
# rep(2013, dim(dat2013)[1]),
# rep(2012, dim(dat2012)[1]),
# rep(2011, dim(dat2011)[1]),
rep(2010, dim(dat2010)[1]))))
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year, col = Year))
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year, col = Year, fill = Year,
alpha = .5))
ggplot(dat, aes(x = Impact.Factor)) + geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5)
)
ggplot(dat, aes(x = Impact.Factor)) +
geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5)
ggplot(dat, aes(x = Impact.Factor)) +
geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=14,face="bold"))
ggplot(dat, aes(x = Impact.Factor)) +
geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=14,face="bold"))
pdf('impact.pdf', width = 16, height = 9)
ggplot(dat, aes(x = Impact.Factor)) +
geom_density(aes(group = Year, col = Year, fill = Year), alpha = .5) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=14,face="bold"))
dev.off()
